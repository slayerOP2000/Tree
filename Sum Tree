class Solution
{
    public:
    pair<bool,int> isSumTreeFast(Node* root)
    {
        if(root == NULL)
        {
            pair<bool,int> p = make_pair(true,0);
            return p;
        }
        if(root->left == NULL && root->right == NULL)
        {
            pair<bool,int> p = make_pair(true,root->data);
            return p;
        }
        pair<bool,int>leftAns = isSumTreeFast(root->left);
        pair<bool,int>rightAns = isSumTreeFast(root->right);
        
        bool left = leftAns.first; // ho sakta hai ki answer yahin left mei mil jaye
        bool right = rightAns.first;// ho sakta hai ki answer yahin right mei mil jaye
        bool condn = root->data == leftAns.second + rightAns.second; // root ka data left + right ke barabar ho
        
        pair<bool, int> ans;
        if(left && right && condn)
        {
            ans.first = true;
            ans.second = 2*root->data;
        }
        else
        {
            ans.first = false;
        }
        return ans;
    }
    bool isSumTree(Node* root)
    {
         // Your code here
         return isSumTreeFast(root).first;
    }
};
