Merge Two sorted BST
*Hosaktaa hai code mei dikkat ho but logic wise sahi hai badmei babbar bhaiya ki repo check krlena
Approach: 
# phele BST 1, BST 2 dono ka inorder nikalo aur store kralo
// Fir dono array ko merege kralo
// Fir inorder to BST lgadoo...



class Solution
{
    public:
    //Function to return a list of integers denoting the node 
    //values of both the BST in a sorted order.
    void inorder(Node *root,vector<int> &in)
    {
        if(root==NULL)
        {
            return;
        }
        inorder(root->left,in);
        in.push_back(root->data);
        inorder(root->right,in);
    }
    
    vector<int> mergeArrays(vector<int> &a,vector<int> &b)
    {
        vector<int> ans(a.size() + b.size());
        int i = 0, j = 0;
        int k =0;
        while(i<a.size() && j<b.size())
        {
            if(a[i]<b[j])
            {
                ans[k++] = a[i];
            }
            else
            {
                ans[k++] = b[i];
                j++;
            }
        }
        while(i<a.size())
        {
            ans[k++] = a[i];
            i++;
        }
        while(j<b.size())
        {
            ans[k++] = b[j];
            j++;
        }
        return ans;
    }
    vector<int> inorderToBST(int s,int e, vector<int> &in)
    {
        if(s>e)
        {
            return NULL;
        }
        int mid = s+e/2;
        Node* root = new Node(in[mid]);
        root->left = inorderToBST(s, mid-1, in);
        root->right = inorderToBST(mid+1,e,in);
        return root;
    }
    vector<int> merge(Node *root1, Node *root2)
    {
       //Your code here
       vector<int> bst1,bst2;
       inorder(root1,bst1);
       inorder(root2,bst2);
       vector<int> mergeArray = mergeArrays(bst1,bst2);
       int s =0;
       int e = mergeArray.size() - 1;
       return inorderToBST(s,e,mergeArray);
       
    }
};
